// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/all-item": {
            "get": {
                "description": "Retrieve Item Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mkt"
                ],
                "summary": "Retrieve Item Control",
                "responses": {
                    "200": {
                        "description": "List of Item Event",
                        "schema": {
                            "$ref": "#/definitions/db.Marketplace"
                        }
                    }
                }
            }
        },
        "/api/calc-cashback": {
            "post": {
                "description": "Calculation Cashback Total",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Calculation Cashback Total",
                "parameters": [
                    {
                        "description": "For add new cashbacks in wallet to consumer",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.Purchase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used Create",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/mkt": {
            "post": {
                "description": "Create New Item For marketPlace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mkt"
                ],
                "summary": "Create New Item For marketPlace",
                "parameters": [
                    {
                        "description": "Data for create new Item",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.MktInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return for creat item",
                        "schema": {
                            "$ref": "#/definitions/db.Marketplace"
                        }
                    }
                }
            }
        },
        "/api/mkt/{id}": {
            "get": {
                "description": "Retrieve an Item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mkt"
                ],
                "summary": "Retrieve Item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item Details",
                        "schema": {
                            "$ref": "#/definitions/db.Marketplace"
                        }
                    }
                }
            }
        },
        "/api/modify-cashback": {
            "put": {
                "description": "Create new cashback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Create cashback",
                "parameters": [
                    {
                        "description": "Data for modify the cashback ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.StorageCashBack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cashback Create",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/modify-pushed": {
            "put": {
                "description": "Create new Pushed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Create Pushed",
                "parameters": [
                    {
                        "description": "Data for modify the pushed ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.StorageBuying"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pushed Create",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/modify-use": {
            "put": {
                "description": "Create new CashBacksUse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "CashBacksUse",
                "parameters": [
                    {
                        "description": "Data for modify the Used ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.StorageUse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used Create",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/remove-cashback": {
            "post": {
                "description": "Remove Cashback Total",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Remove Cashback Total",
                "parameters": [
                    {
                        "description": "For add new cashbacks in wallet to consumer",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.Purchase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Used Create",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/storage/{id}": {
            "get": {
                "description": "Retrieve an storage by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Retrieve Storage by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage Details",
                        "schema": {
                            "$ref": "#/definitions/db.Store"
                        }
                    }
                }
            }
        },
        "/api/storages": {
            "get": {
                "description": "Retrieve all storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Retrieve All Storage",
                "responses": {
                    "200": {
                        "description": "List of All Storage",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Store"
                            }
                        }
                    }
                }
            }
        },
        "/api/test-token": {
            "post": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Test Token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Criar token de auth",
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Marketplace": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "db.OpeningHours": {
            "type": "object",
            "properties": {
                "friday": {
                    "type": "string"
                },
                "monday": {
                    "type": "string"
                },
                "saturday": {
                    "type": "string"
                },
                "sunday": {
                    "type": "string"
                },
                "thursday": {
                    "type": "string"
                },
                "tuesday": {
                    "type": "string"
                },
                "wednesday": {
                    "type": "string"
                }
            }
        },
        "db.Store": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "buying": {
                    "type": "integer"
                },
                "cashBacksUse": {
                    "type": "integer"
                },
                "cashback": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "openingHours": {
                    "$ref": "#/definitions/db.OpeningHours"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "interfaces.MktInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "interfaces.Purchase": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "interfaces.StorageBuying": {
            "type": "object",
            "properties": {
                "buying": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "interfaces.StorageCashBack": {
            "type": "object",
            "properties": {
                "cashback": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "interfaces.StorageUse": {
            "type": "object",
            "properties": {
                "buying": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Viva",
	Description:      "This is a server for app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
